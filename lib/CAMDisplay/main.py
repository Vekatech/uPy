# main.py -- put your code here!
from os import uname
from time import ticks_ms
from machine import I2C,CAM,LCD
from framebuf import FrameBuffer,RGB565,MONO_HLSB

RED = const(0x001F)
BLUE = const(0xF800)
GREEN = const(0x07E0)
YELLOW = const(0x07FF)
MAGENTA = const(0xF81F)
CYAN = const(0xFFE0)
WHITE = const(0xFFFF)

CLR = (BLUE, RED, GREEN, CYAN, MAGENTA, YELLOW, WHITE)
EFF = (CAM.EFFECT_BLUE, CAM.EFFECT_RED, CAM.EFFECT_GREEN, CAM.EFFECT_NEG, CAM.EFFECT_BW, CAM.EFFECT_RETRO, CAM.EFFECT_NONE)
BRD = uname().machine

Logo = bytearray(b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff' + \
                 b'\xff\xff\xfe\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xff\xff' + \
                 b'\xff\xff\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xff\xff' + \
                 b'\xff\xff\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xff\xff' + \
                 b'\xff\xfe\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xff' + \
                 b'\xff\xf8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f\xff' + \
                 b'\xff\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xff' + \
                 b'\xff\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xff' + \
                 b'\xff\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\xff' + \
                 b'\xff\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xff' + \
                 b'\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff' + \
                 b'\xfe\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f' + \
                 b'\xfc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3f' + \
                 b'\xf8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f' + \
                 b'\xf8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f' + \
                 b'\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f' + \
                 b'\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f' + \
                 b'\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07' + \
                 b'\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07' + \
                 b'\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03' + \
                 b'\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03' + \
                 b'\xc0\x00\x00\x00\x00\x00\x07\xff\xff\xe0\x00\x00\x00\x00\x00\x03' + \
                 b'\xc0\x00\x00\x00\x00\x07\xff\xff\xff\xff\xc0\x00\x00\x00\x00\x03' + \
                 b'\x80\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x01' + \
                 b'\x80\x00\x00\x00\x0f\xff\xff\xff\xff\xff\xff\xf0\x00\x00\x00\x01' + \
                 b'\x80\x00\x00\x00\x7f\xff\xff\xff\xff\xff\xff\xfe\x00\x00\x00\x01' + \
                 b'\x80\x00\x00\x03\xff\xff\xff\xff\xff\xff\xff\xff\xc0\x00\x00\x01' + \
                 b'\x80\x00\x00\x1f\xff\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\x01' + \
                 b'\x80\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x01' + \
                 b'\x80\x00\x03\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xc0\x00\x01' + \
                 b'\x80\x00\x0f\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xf0\x00\x01' + \
                 b'\x80\x00\x3f\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfc\x00\x01' + \
                 b'\x80\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x01' + \
                 b'\x80\x03\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x80\x01' + \
                 b'\x80\x07\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xe0\x01' + \
                 b'\x80\x1f\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xf8\x01' + \
                 b'\x80\x3f\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfc\x01' + \
                 b'\x80\x7f\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\x01' + \
                 b'\x81\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01' + \
                 b'\x83\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xc1' + \
                 b'\x87\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xe1' + \
                 b'\x8f\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xf1' + \
                 b'\x9f\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xf9' + \
                 b'\xbf\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd' + \
                 b'\xff\xff\xff\xff\xff\xff\xff\xe0\x07\xff\xff\xff\xff\xff\xff\xfd' + \
                 b'\xff\xff\xff\xff\xf1\xff\xff\x80\x01\xff\xff\x8f\xff\xff\xff\xff' + \
                 b'\xff\xff\xff\xff\xc1\xff\xfe\x00\x00\x7f\xff\x83\xff\xff\xff\xff' + \
                 b'\xff\xff\xff\xff\x03\xff\xfc\x00\x00\x3f\xff\x80\x7f\xff\xff\xff' + \
                 b'\xff\xff\xff\xfc\x03\xff\xf8\x00\x00\x1f\xff\xc0\x3f\xff\xff\xff' + \
                 b'\xff\xff\xff\xf0\x03\xff\xf0\x00\x00\x0f\xff\xc0\x0f\xff\xff\xff' + \
                 b'\xff\xff\xff\x80\x07\xff\xe0\x00\x00\x07\xff\xc0\x01\xff\xff\xff' + \
                 b'\xff\xff\xfe\x00\x07\xff\xe0\x00\xe0\x07\xff\xe0\x00\x7f\xff\xff' + \
                 b'\xff\xff\xf8\x00\x07\xff\xc0\x03\xf8\x03\xff\xe0\x00\x1f\xff\xff' + \
                 b'\xff\xff\xf0\x00\x07\xff\xc0\x07\xfc\x03\xff\xe0\x00\x0f\xff\xff' + \
                 b'\xff\xff\xc0\x00\x0f\xff\x80\x07\xfe\x01\xff\xf0\x00\x03\xff\xff' + \
                 b'\xff\xff\x00\x00\x0f\xff\x80\x0f\xff\x01\xff\xf0\x00\x00\xff\xff' + \
                 b'\xff\xfe\x00\x00\x0f\xff\x80\x0f\xff\x01\xff\xf0\x00\x00\x7f\xff' + \
                 b'\xff\xf8\x00\x00\x0f\xff\x80\x0f\xff\x01\xff\xf8\x00\x00\x1f\xff' + \
                 b'\xff\xf0\x00\x00\x1f\xff\x80\x0f\xff\x01\xff\xf8\x00\x00\x0f\xff' + \
                 b'\xff\xe0\x00\x00\x1f\xff\x80\x0f\xfe\x01\xff\xf8\x00\x00\x07\xff' + \
                 b'\xff\xc0\x00\x00\x1f\xff\x80\x07\xfe\x01\xff\xf8\x00\x00\x03\xff' + \
                 b'\xff\x80\x00\x00\x1f\xff\x80\x07\xfc\x01\xff\xf8\x00\x00\x01\xff' + \
                 b'\xff\x80\x00\x00\x1f\xff\x80\x01\xf8\x01\xff\xf8\x00\x00\x01\xff' + \
                 b'\xff\x00\x00\x00\x1f\xff\x80\x00\x00\x01\xff\xf8\x00\x00\x00\xff' + \
                 b'\xff\x00\x00\x00\x0f\xff\xc0\x00\x00\x03\xff\xf0\x00\x00\x00\xff' + \
                 b'\xfe\x00\x00\x00\x0f\xff\xc0\x00\x00\x03\xff\xf0\x00\x00\x00\x7f' + \
                 b'\xfe\x00\x00\x00\x0f\xff\xe0\x00\x00\x07\xff\xf0\x00\x00\x00\x7f' + \
                 b'\xfe\x00\x00\x00\x0f\xff\xe0\x00\x00\x07\xff\xf0\x00\x00\x00\x7f' + \
                 b'\xfe\x00\x00\x00\x07\xff\xf0\x00\x00\x0f\xff\xe0\x00\x00\x00\x7f' + \
                 b'\xfe\x00\x00\x00\x07\xff\xf8\x00\x00\x1f\xff\xe0\x00\x00\x00\x7f' + \
                 b'\xfe\x00\x00\x00\x07\xff\xfc\x00\x00\x3f\xff\xe0\x00\x00\x00\xff' + \
                 b'\xff\x00\x00\x00\x03\xff\xfe\x00\x00\x7f\xff\xc0\x00\x00\x00\xff' + \
                 b'\xff\x00\x00\x00\x03\xff\xff\x80\x01\xff\xff\xc0\x00\x00\x00\xff' + \
                 b'\xff\x80\x00\x00\x01\xff\xff\xe0\x07\xff\xff\x80\x00\x00\x01\xff' + \
                 b'\xff\x80\x00\x00\x01\xff\xff\xff\xff\xff\xff\x80\x00\x00\x03\xff' + \
                 b'\xff\xc0\x00\x00\x00\xff\xff\xff\xff\xff\xff\x00\x00\x00\x03\xff' + \
                 b'\xff\xe0\x00\x00\x00\x7f\xff\xff\xff\xff\xfe\x00\x00\x00\x07\xff' + \
                 b'\xff\xf0\x00\x00\x00\x7f\xff\xff\xff\xff\xfe\x00\x00\x00\x1f\xff' + \
                 b'\xff\xfc\x00\x00\x00\x3f\xff\xff\xff\xff\xfc\x00\x00\x00\x3f\xff' + \
                 b'\xff\xfe\x00\x00\x00\x1f\xff\xff\xff\xff\xf8\x00\x00\x00\x7f\xff' + \
                 b'\xff\xff\x80\x00\x00\x0f\xff\xff\xff\xff\xf0\x00\x00\x01\xff\xff' + \
                 b'\xff\xff\xe0\x00\x00\x07\xff\xff\xff\xff\xe0\x00\x00\x07\xff\xff' + \
                 b'\xff\xff\xf0\x00\x00\x03\xff\xff\xff\xff\xc0\x00\x00\x0f\xff\xff' + \
                 b'\xbf\xff\xfc\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x3f\xff\xfd' + \
                 b'\xbf\xff\xff\x00\x00\x00\x7f\xff\xff\xfe\x00\x00\x00\xff\xff\xfd' + \
                 b'\x9f\xff\xff\xc0\x00\x00\x1f\xff\xff\xf8\x00\x00\x03\xff\xff\xf9' + \
                 b'\x8f\xff\xff\xf0\x00\x00\x07\xff\xff\xe0\x00\x00\x0f\xff\xff\xf1' + \
                 b'\x87\xff\xff\xfc\x00\x00\x00\xff\xff\x00\x00\x00\x3f\xff\xff\xe1' + \
                 b'\x83\xff\xff\xff\x80\x00\x00\x07\xe0\x00\x00\x01\xff\xff\xff\xc1' + \
                 b'\x80\xff\xff\xff\xe0\x00\x00\x00\x00\x00\x00\x07\xff\xff\xff\x01' + \
                 b'\x80\x7f\xff\xff\xf8\x00\x00\x00\x00\x00\x00\x1f\xff\xff\xfe\x01' + \
                 b'\x80\x3f\xff\xff\xff\x00\x00\x00\x00\x00\x00\xff\xff\xff\xfc\x01' + \
                 b'\x80\x1f\xff\xff\xff\xe0\x00\x00\x00\x00\x03\xff\xff\xff\xf8\x01' + \
                 b'\x80\x07\xff\xff\xff\xfc\x00\x00\x00\x00\x3f\xff\xff\xff\xe0\x01' + \
                 b'\x80\x01\xff\xff\xff\xff\xc0\x00\x00\x03\xff\xff\xff\xff\x80\x01' + \
                 b'\x80\x00\xff\xff\xff\xff\xff\x00\x00\x7f\xff\xff\xff\xff\x00\x01' + \
                 b'\x80\x00\x3f\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfc\x00\x01' + \
                 b'\x80\x00\x0f\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xf0\x00\x01' + \
                 b'\x80\x00\x03\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xc0\x00\x01' + \
                 b'\x80\x00\x00\x7f\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x01' + \
                 b'\x80\x00\x00\x1f\xff\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\x01' + \
                 b'\x80\x00\x00\x03\xff\xff\xff\xff\xff\xff\xff\xff\xc0\x00\x00\x01' + \
                 b'\x80\x00\x00\x00\x7f\xff\xff\xff\xff\xff\xff\xfe\x00\x00\x00\x01' + \
                 b'\x80\x00\x00\x00\x0f\xff\xff\xff\xff\xff\xff\xf0\x00\x00\x00\x01' + \
                 b'\x80\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x01' + \
                 b'\xc0\x00\x00\x00\x00\x03\xff\xff\xff\xff\xc0\x00\x00\x00\x00\x03' + \
                 b'\xc0\x00\x00\x00\x00\x00\x07\xff\xff\xe0\x00\x00\x00\x00\x00\x03' + \
                 b'\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03' + \
                 b'\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03' + \
                 b'\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07' + \
                 b'\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07' + \
                 b'\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f' + \
                 b'\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f' + \
                 b'\xf8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f' + \
                 b'\xf8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f' + \
                 b'\xfc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3f' + \
                 b'\xfe\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f' + \
                 b'\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff' + \
                 b'\xff\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xff' + \
                 b'\xff\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\xff' + \
                 b'\xff\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xff' + \
                 b'\xff\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xff' + \
                 b'\xff\xf8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f\xff' + \
                 b'\xff\xfe\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xff' + \
                 b'\xff\xff\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xff\xff' + \
                 b'\xff\xff\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xff\xff' + \
                 b'\xff\xff\xfe\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xff\xff' + \
                 b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff')

def DEMO():
    tch = False
    if("VK-RA6M3" in BRD):
        Dis = LCD()
        Dis.init()
        Dis.start()
        
        Cam = CAM(I2C(1))
        Cam.init()
        
        lcd = FrameBuffer(Dis, 480, 272, RGB565)
        xoff = 320 + 20
        yoff = 128 + 16
        # micropython LOGO
        lcd.fill(0)
        lcd.fill_rect(xoff+0, 0, 120, 128, 0xffff)
        lcd.fill_rect(xoff+4, 4, 112, 120, 0)
        lcd.vline(xoff+32, 32, 92, 0xffff)
        lcd.vline(xoff+60, 4, 92, 0xffff)
        lcd.vline(xoff+88, 32, 92, 0xffff)
        lcd.fill_rect(xoff+98, 100, 10, 16, 0xFFFF)
        lcd.text('MicroPython!', xoff+12, 128+4, GREEN)
        # vekatech LOGO
        Log = FrameBuffer(Logo, 128, 128, MONO_HLSB)
        for y in range(0, 128):
            for x in range(0, 128):
                if(Log.pixel(x, y) == 0):
                    lcd.pixel(x+xoff, y+yoff, 0x81E5)
                else:
                    lcd.pixel(x+xoff, y+yoff, 0)
        # BG flag
        lcd.fill_rect(0, 255, 320, 5, 0xffff)
        lcd.fill_rect(0, 260, 320, 5, 0x07E0)
        lcd.fill_rect(0, 265, 320, 5, 0x001F)
        
        Cam.show_start(Dis)
        idx = 0
        stamp = ticks_ms()
        while True:
            if(Dis.touched() > 0):
                dots = Dis.touches()
                for d in dots:
                    if((d[0] > xoff) and (d[1] > yoff)):
                        tch = True
                        stamp = ticks_ms()
            else:
                if((ticks_ms() - stamp) > 50):
                    if(tch):
                        lcd.fill_rect(xoff+98, 100, 10, 16, CLR[idx])
                        lcd.text('MicroPython!', xoff+12, 128+4, CLR[idx])
                        Cam.speffect(EFF[idx])
                        if(idx < len(CLR)-1):
                            idx += 1
                        else:
                            idx = 0
                    tch = False
    else:
        print("Demo for {} is not available yet".format(BRD))

DEMO()